{"ast":null,"code":"import axios from 'axios';\nexport const SearchProduct = content => {\n  return dispatch => {\n    dispatch(searchProductStarted());\n    axios.post('/search', {\n      search: content\n    }).then(res => {\n      dispatch(searchProductSuccess(res.data));\n    }).catch(err => {\n      dispatch(searchProductFailure(err.message));\n    });\n  };\n};\nexport const filterProduct = (checked, id, name) => ({\n  type: 'FILTER_DATA',\n  payload: {\n    name,\n    id,\n    checked\n  }\n});\n\nconst searchProductStarted = () => ({\n  type: 'SEARCH_PRODUCT'\n});\n\nconst searchProductSuccess = data => ({\n  type: 'SEARCH_PRODUCT_SUCCESS',\n  payload: {\n    data\n  }\n});\n\nconst searchProductFailure = error => ({\n  type: 'SEARCH_PRODUCT_FAILURE',\n  payload: {\n    error\n  }\n});\n\nexport const loginUser = content => {\n  return dispatch => {\n    dispatch(loginUserStarted());\n    axios.post('/login', { ...content\n    }).then(res => {\n      dispatch(loginUserSuccess(res.data));\n    }).catch(err => {\n      dispatch(loginUserFailure(err.message));\n    });\n  };\n};\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER_START'\n});\n\nconst loginUserSuccess = data => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: {\n    data\n  }\n});\n\nconst loginUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: {\n    error\n  }\n});\n\nexport const registerUser = content => {\n  return dispatch => {\n    dispatch(registerUserStarted());\n    axios.post('/register', { ...content\n    }).then(res => {\n      dispatch(registerUserSuccess(res.data));\n    }).catch(err => {\n      dispatch(registerUserFailure(err.message));\n    });\n  };\n};\n\nconst registerUserStarted = () => ({\n  type: 'LOGIN_USER_START'\n});\n\nconst registerUserSuccess = data => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: {\n    data\n  }\n});\n\nconst registerUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: {\n    error\n  }\n});\n\nexport const checkAuth = content => {\n  return dispatch => {\n    dispatch(checkAuthStarted());\n    axios.get('/isAuth').then(res => {\n      dispatch(loginUserSuccess(res.data));\n      dispatch(checkAuthSuccess());\n    }).catch(err => {\n      dispatch(checkAuthFailure(err));\n    });\n  };\n};\n\nconst checkAuthStarted = () => ({\n  type: 'LOGIN_USER_START'\n});\n\nconst checkAuthSuccess = data => ({\n  type: 'LOGIN_USER_SUCCESS'\n});\n\nconst checkAuthFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: {\n    error\n  }\n});","map":{"version":3,"sources":["/home/rahul/Desktop/PROJECTS/online_clothing/frontend/src/redux/actions.js"],"names":["axios","SearchProduct","content","dispatch","searchProductStarted","post","search","then","res","searchProductSuccess","data","catch","err","searchProductFailure","message","filterProduct","checked","id","name","type","payload","error","loginUser","loginUserStarted","loginUserSuccess","loginUserFailure","registerUser","registerUserStarted","registerUserSuccess","registerUserFailure","checkAuth","checkAuthStarted","get","checkAuthSuccess","checkAuthFailure"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nexport const SearchProduct = content =>{\n    return dispatch =>{\n        dispatch(searchProductStarted());\n\n        axios.post('/search',{search:content})\n        .then(res=> {dispatch(searchProductSuccess(res.data))})\n        .catch(err=>{dispatch(searchProductFailure(err.message))})\n    }\n}\nexport const filterProduct = (checked,id,name) =>({\n  type:'FILTER_DATA',\n  payload:{\n    name,\n    id,\n    checked\n  }\n})\n\n\nconst searchProductStarted = () => ({\n    type: 'SEARCH_PRODUCT'\n  });\n\nconst searchProductSuccess = data => ({\n    type: 'SEARCH_PRODUCT_SUCCESS',\n    payload: {\n      data\n    }\n  });\n\nconst searchProductFailure = error => ({\n    type: 'SEARCH_PRODUCT_FAILURE',\n    payload: {\n      error\n    }\n  });\n\n  export const loginUser = content =>{\n    return dispatch =>{\n        dispatch(loginUserStarted());\n        axios.post('/login',{...content})\n        .then(res=> {dispatch(loginUserSuccess(res.data))})\n        .catch(err=>{dispatch(loginUserFailure(err.message))})\n    }\n}\n\n\nconst loginUserStarted = () => ({\n  type: 'LOGIN_USER_START'\n});\n\nconst loginUserSuccess = data => ({\n  type: 'LOGIN_USER_SUCCESS',\n  payload: {\n    data\n  }\n});\n\nconst loginUserFailure = error => ({\n  type: 'LOGIN_USER_FAILURE',\n  payload: {\n    error\n  }\n});\n\n\n\nexport const registerUser = content =>{\n  return dispatch =>{\n      dispatch(registerUserStarted());\n      axios.post('/register',{...content})\n      .then(res=> {dispatch(registerUserSuccess(res.data))})\n      .catch(err=>{dispatch(registerUserFailure(err.message))})\n  }\n}\n\n\nconst registerUserStarted = () => ({\ntype: 'LOGIN_USER_START'\n});\n\nconst registerUserSuccess = data => ({\ntype: 'LOGIN_USER_SUCCESS',\npayload: {\n  data\n}\n});\n\nconst registerUserFailure = error => ({\ntype: 'LOGIN_USER_FAILURE',\npayload: {\n  error\n}\n});\n\nexport const checkAuth = content =>{\n  return dispatch =>{\n      dispatch(checkAuthStarted());\n      axios.get('/isAuth')\n      .then(res=> {dispatch(loginUserSuccess(res.data));dispatch(checkAuthSuccess())})\n      .catch(err=>{dispatch(checkAuthFailure(err))})\n  }\n}\n\n\nconst checkAuthStarted = () => ({\ntype: 'LOGIN_USER_START'\n});\n\nconst checkAuthSuccess = data => ({\ntype: 'LOGIN_USER_SUCCESS'\n});\n\nconst checkAuthFailure = error => ({\ntype: 'LOGIN_USER_FAILURE',\npayload: {\n  error\n}\n});"]},"metadata":{},"sourceType":"module"}