{"ast":null,"code":"var isCore = require('./is-core');\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar caller = require('./caller.js');\n\nvar nodeModulesPaths = require('./node-modules-paths.js');\n\nvar normalizeOptions = require('./normalize-options.js');\n\nvar realpath = typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n  try {\n    var stat = fs.statSync(file);\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n\n  return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n  try {\n    var stat = fs.statSync(dir);\n  } catch (e) {\n    if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n    throw e;\n  }\n\n  return stat.isDirectory();\n};\n\nvar maybeUnwrapSymlink = function maybeUnwrapSymlink(x, opts) {\n  if (opts && opts.preserveSymlinks === false) {\n    try {\n      return realpath(x);\n    } catch (realPathErr) {\n      if (realPathErr.code !== 'ENOENT') {\n        throw realPathErr;\n      }\n    }\n  }\n\n  return x;\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n  var dirs = nodeModulesPaths(start, opts, x);\n\n  for (var i = 0; i < dirs.length; i++) {\n    dirs[i] = path.join(dirs[i], x);\n  }\n\n  return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n  if (typeof x !== 'string') {\n    throw new TypeError('Path must be a string.');\n  }\n\n  var opts = normalizeOptions(x, options);\n  var isFile = opts.isFile || defaultIsFile;\n  var readFileSync = opts.readFileSync || fs.readFileSync;\n  var isDirectory = opts.isDirectory || defaultIsDir;\n  var packageIterator = opts.packageIterator;\n  var extensions = opts.extensions || ['.js'];\n  var basedir = opts.basedir || path.dirname(caller());\n  var parent = opts.filename || basedir;\n  opts.paths = opts.paths || []; // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n\n  var absoluteStart = maybeUnwrapSymlink(path.resolve(basedir), opts);\n\n  if (/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/.test(x)) {\n    var res = path.resolve(absoluteStart, x);\n    if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n    var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n    if (m) return maybeUnwrapSymlink(m, opts);\n  } else if (isCore(x)) {\n    return x;\n  } else {\n    var n = loadNodeModulesSync(x, absoluteStart);\n    if (n) return maybeUnwrapSymlink(n, opts);\n  }\n\n  var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n\n  function loadAsFileSync(x) {\n    var pkg = loadpkg(path.dirname(x));\n\n    if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n      var rfile = path.relative(pkg.dir, x);\n      var r = opts.pathFilter(pkg.pkg, x, rfile);\n\n      if (r) {\n        x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n      }\n    }\n\n    if (isFile(x)) {\n      return x;\n    }\n\n    for (var i = 0; i < extensions.length; i++) {\n      var file = x + extensions[i];\n\n      if (isFile(file)) {\n        return file;\n      }\n    }\n  }\n\n  function loadpkg(dir) {\n    if (dir === '' || dir === '/') return;\n\n    if (process.platform === 'win32' && /^\\w:[/\\\\]*$/.test(dir)) {\n      return;\n    }\n\n    if (/[/\\\\]node_modules[/\\\\]*$/.test(dir)) return;\n    var pkgfile = path.join(maybeUnwrapSymlink(dir, opts), 'package.json');\n\n    if (!isFile(pkgfile)) {\n      return loadpkg(path.dirname(dir));\n    }\n\n    var body = readFileSync(pkgfile);\n\n    try {\n      var pkg = JSON.parse(body);\n    } catch (jsonErr) {}\n\n    if (pkg && opts.packageFilter) {\n      // v2 will pass pkgfile\n      pkg = opts.packageFilter(pkg,\n      /*pkgfile,*/\n      dir); // eslint-disable-line spaced-comment\n    }\n\n    return {\n      pkg: pkg,\n      dir: dir\n    };\n  }\n\n  function loadAsDirectorySync(x) {\n    var pkgfile = path.join(maybeUnwrapSymlink(x, opts), '/package.json');\n\n    if (isFile(pkgfile)) {\n      try {\n        var body = readFileSync(pkgfile, 'UTF8');\n        var pkg = JSON.parse(body);\n      } catch (e) {}\n\n      if (pkg && opts.packageFilter) {\n        // v2 will pass pkgfile\n        pkg = opts.packageFilter(pkg,\n        /*pkgfile,*/\n        x); // eslint-disable-line spaced-comment\n      }\n\n      if (pkg && pkg.main) {\n        if (typeof pkg.main !== 'string') {\n          var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n          mainError.code = 'INVALID_PACKAGE_MAIN';\n          throw mainError;\n        }\n\n        if (pkg.main === '.' || pkg.main === './') {\n          pkg.main = 'index';\n        }\n\n        try {\n          var m = loadAsFileSync(path.resolve(x, pkg.main));\n          if (m) return m;\n          var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n          if (n) return n;\n        } catch (e) {}\n      }\n    }\n\n    return loadAsFileSync(path.join(x, '/index'));\n  }\n\n  function loadNodeModulesSync(x, start) {\n    var thunk = function () {\n      return getPackageCandidates(x, start, opts);\n    };\n\n    var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n    for (var i = 0; i < dirs.length; i++) {\n      var dir = dirs[i];\n\n      if (isDirectory(path.dirname(dir))) {\n        var m = loadAsFileSync(dir);\n        if (m) return m;\n        var n = loadAsDirectorySync(dir);\n        if (n) return n;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/home/rahul/Desktop/PROJECTS/online_clothing/node_modules/resolve/lib/sync.js"],"names":["isCore","require","fs","path","caller","nodeModulesPaths","normalizeOptions","realpath","realpathSync","native","defaultIsFile","isFile","file","stat","statSync","e","code","isFIFO","defaultIsDir","isDirectory","dir","maybeUnwrapSymlink","x","opts","preserveSymlinks","realPathErr","getPackageCandidates","start","dirs","i","length","join","module","exports","resolveSync","options","TypeError","readFileSync","packageIterator","extensions","basedir","dirname","parent","filename","paths","absoluteStart","resolve","test","res","slice","m","loadAsFileSync","loadAsDirectorySync","n","loadNodeModulesSync","err","Error","pkg","loadpkg","pathFilter","rfile","relative","r","process","platform","pkgfile","body","JSON","parse","jsonErr","packageFilter","main","mainError","name","thunk"],"mappings":"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","sourcesContent":["var isCore = require('./is-core');\nvar fs = require('fs');\nvar path = require('path');\nvar caller = require('./caller.js');\nvar nodeModulesPaths = require('./node-modules-paths.js');\nvar normalizeOptions = require('./normalize-options.js');\n\nvar realpath = typeof fs.realpathSync.native === 'function' ? fs.realpathSync.native : fs.realpathSync;\n\nvar defaultIsFile = function isFile(file) {\n    try {\n        var stat = fs.statSync(file);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isFile() || stat.isFIFO();\n};\n\nvar defaultIsDir = function isDirectory(dir) {\n    try {\n        var stat = fs.statSync(dir);\n    } catch (e) {\n        if (e && (e.code === 'ENOENT' || e.code === 'ENOTDIR')) return false;\n        throw e;\n    }\n    return stat.isDirectory();\n};\n\nvar maybeUnwrapSymlink = function maybeUnwrapSymlink(x, opts) {\n    if (opts && opts.preserveSymlinks === false) {\n        try {\n            return realpath(x);\n        } catch (realPathErr) {\n            if (realPathErr.code !== 'ENOENT') {\n                throw realPathErr;\n            }\n        }\n    }\n    return x;\n};\n\nvar getPackageCandidates = function getPackageCandidates(x, start, opts) {\n    var dirs = nodeModulesPaths(start, opts, x);\n    for (var i = 0; i < dirs.length; i++) {\n        dirs[i] = path.join(dirs[i], x);\n    }\n    return dirs;\n};\n\nmodule.exports = function resolveSync(x, options) {\n    if (typeof x !== 'string') {\n        throw new TypeError('Path must be a string.');\n    }\n    var opts = normalizeOptions(x, options);\n\n    var isFile = opts.isFile || defaultIsFile;\n    var readFileSync = opts.readFileSync || fs.readFileSync;\n    var isDirectory = opts.isDirectory || defaultIsDir;\n    var packageIterator = opts.packageIterator;\n\n    var extensions = opts.extensions || ['.js'];\n    var basedir = opts.basedir || path.dirname(caller());\n    var parent = opts.filename || basedir;\n\n    opts.paths = opts.paths || [];\n\n    // ensure that `basedir` is an absolute path at this point, resolving against the process' current working directory\n    var absoluteStart = maybeUnwrapSymlink(path.resolve(basedir), opts);\n\n    if ((/^(?:\\.\\.?(?:\\/|$)|\\/|([A-Za-z]:)?[/\\\\])/).test(x)) {\n        var res = path.resolve(absoluteStart, x);\n        if (x === '.' || x === '..' || x.slice(-1) === '/') res += '/';\n        var m = loadAsFileSync(res) || loadAsDirectorySync(res);\n        if (m) return maybeUnwrapSymlink(m, opts);\n    } else if (isCore(x)) {\n        return x;\n    } else {\n        var n = loadNodeModulesSync(x, absoluteStart);\n        if (n) return maybeUnwrapSymlink(n, opts);\n    }\n\n    var err = new Error(\"Cannot find module '\" + x + \"' from '\" + parent + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n\n    function loadAsFileSync(x) {\n        var pkg = loadpkg(path.dirname(x));\n\n        if (pkg && pkg.dir && pkg.pkg && opts.pathFilter) {\n            var rfile = path.relative(pkg.dir, x);\n            var r = opts.pathFilter(pkg.pkg, x, rfile);\n            if (r) {\n                x = path.resolve(pkg.dir, r); // eslint-disable-line no-param-reassign\n            }\n        }\n\n        if (isFile(x)) {\n            return x;\n        }\n\n        for (var i = 0; i < extensions.length; i++) {\n            var file = x + extensions[i];\n            if (isFile(file)) {\n                return file;\n            }\n        }\n    }\n\n    function loadpkg(dir) {\n        if (dir === '' || dir === '/') return;\n        if (process.platform === 'win32' && (/^\\w:[/\\\\]*$/).test(dir)) {\n            return;\n        }\n        if ((/[/\\\\]node_modules[/\\\\]*$/).test(dir)) return;\n\n        var pkgfile = path.join(maybeUnwrapSymlink(dir, opts), 'package.json');\n\n        if (!isFile(pkgfile)) {\n            return loadpkg(path.dirname(dir));\n        }\n\n        var body = readFileSync(pkgfile);\n\n        try {\n            var pkg = JSON.parse(body);\n        } catch (jsonErr) {}\n\n        if (pkg && opts.packageFilter) {\n            // v2 will pass pkgfile\n            pkg = opts.packageFilter(pkg, /*pkgfile,*/ dir); // eslint-disable-line spaced-comment\n        }\n\n        return { pkg: pkg, dir: dir };\n    }\n\n    function loadAsDirectorySync(x) {\n        var pkgfile = path.join(maybeUnwrapSymlink(x, opts), '/package.json');\n        if (isFile(pkgfile)) {\n            try {\n                var body = readFileSync(pkgfile, 'UTF8');\n                var pkg = JSON.parse(body);\n            } catch (e) {}\n\n            if (pkg && opts.packageFilter) {\n                // v2 will pass pkgfile\n                pkg = opts.packageFilter(pkg, /*pkgfile,*/ x); // eslint-disable-line spaced-comment\n            }\n\n            if (pkg && pkg.main) {\n                if (typeof pkg.main !== 'string') {\n                    var mainError = new TypeError('package “' + pkg.name + '” `main` must be a string');\n                    mainError.code = 'INVALID_PACKAGE_MAIN';\n                    throw mainError;\n                }\n                if (pkg.main === '.' || pkg.main === './') {\n                    pkg.main = 'index';\n                }\n                try {\n                    var m = loadAsFileSync(path.resolve(x, pkg.main));\n                    if (m) return m;\n                    var n = loadAsDirectorySync(path.resolve(x, pkg.main));\n                    if (n) return n;\n                } catch (e) {}\n            }\n        }\n\n        return loadAsFileSync(path.join(x, '/index'));\n    }\n\n    function loadNodeModulesSync(x, start) {\n        var thunk = function () { return getPackageCandidates(x, start, opts); };\n        var dirs = packageIterator ? packageIterator(x, start, thunk, opts) : thunk();\n\n        for (var i = 0; i < dirs.length; i++) {\n            var dir = dirs[i];\n            if (isDirectory(path.dirname(dir))) {\n                var m = loadAsFileSync(dir);\n                if (m) return m;\n                var n = loadAsDirectorySync(dir);\n                if (n) return n;\n            }\n        }\n    }\n};\n"]},"metadata":{},"sourceType":"script"}