{"ast":null,"code":"var _jsxFileName = \"/home/rahul/Desktop/PROJECTS/online_clothing/frontend/src/components/Filter.js\";\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport \"./Filter.css\";\nimport { getBrandNames, maxPrice } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport { filterProduct } from '../redux/actions';\n\nclass Filter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: [],\n      max: []\n    };\n  }\n\n  componentDidMount() {\n    let brand = getBrandNames(this.props.data);\n    let max = maxPrice(this.props.data);\n    this.setState({\n      brand,\n      max\n    });\n  }\n\n  handleChange(evt) {\n    let {\n      checked,\n      id,\n      name\n    } = evt.target;\n    this.props.filterProduct(evt.target.checked, evt.target.id, evt.target.name);\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"p-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Filters\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 gender-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: `default-checkbox`,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, ['Men', 'Women', 'Boys', 'Girls'].map(e => /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      name: \"gender\",\n      type: \"checkbox\",\n      id: e,\n      label: e,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 27\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 gender-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, \"Brand\"), /*#__PURE__*/React.createElement(Form, {\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: `default-checkbox`,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, Array.from(this.state.brand).map(m => /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"checkbox\",\n      name: \"brand\",\n      id: m,\n      label: `  ${m}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-2 gender-filter price-filter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"py-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Form, {\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: `default-checkbox`,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"checkbox\",\n      name: \"price\",\n      id: 'first',\n      label: `  Rs. 0 to Rs. ${this.state.max / 3}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"checkbox\",\n      name: \"price\",\n      id: 'second',\n      label: `  Rs. ${this.state.max} to Rs.${this.state.max / 3 * 2}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Form.Check, {\n      custom: true,\n      type: \"checkbox\",\n      name: \"price\",\n      id: 'third',\n      label: `  Rs.${this.state.max / 3 * 2} to Rs. ${this.state.max}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const {\n    data\n  } = state;\n  return {\n    data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  filterProduct\n})(Filter);","map":{"version":3,"sources":["/home/rahul/Desktop/PROJECTS/online_clothing/frontend/src/components/Filter.js"],"names":["React","Component","Form","getBrandNames","maxPrice","connect","filterProduct","Filter","constructor","props","state","brand","max","componentDidMount","data","setState","handleChange","evt","checked","id","name","target","render","console","log","map","e","Array","from","m","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport \"./Filter.css\"\nimport {getBrandNames,maxPrice} from '../redux/selectors';\nimport {connect} from 'react-redux';\nimport {filterProduct} from '../redux/actions';\n\nclass Filter extends Component{\n    constructor(props){\n        super(props)\n        this.state = {brand:[],max:[]};\n    }\n    componentDidMount(){\n        let brand = getBrandNames(this.props.data);\n        let max = maxPrice(this.props.data);\n        this.setState({brand,max})\n    }\n    handleChange(evt){\n        let {checked,id,name} = evt.target;\n        this.props.filterProduct(evt.target.checked,evt.target.id,evt.target.name)\n    }\n    render(){\n        console.log(this.props)\n        return(\n            <div className='filter'>\n                <h4 className='p-2 '>Filters</h4>\n                    <div className='p-2 gender-filter'>\n                    <Form>\n                    <div key={`default-checkbox`} className=\"mb-3\">\n                        {['Men','Women','Boys','Girls'].map(e=>(\n                          <Form.Check \n                          custom\n                          name='gender'\n                          type='checkbox'\n                          id={e}\n                          label={e}\n                        />  \n                        ))}\n                        </div>\n                    </Form>\n                    </div>\n                    \n                    <div className='p-2 gender-filter'>\n                    <h4 className='py-1'>Brand</h4>\n                    <Form onChange={this.handleChange}>\n                        <div key={`default-checkbox`} className=\"mb-3\">\n                            {Array.from(this.state.brand).map(m=>(\n                                <Form.Check\n                                custom\n                                type='checkbox'\n                                name='brand'\n                                id={m}\n                                label={`  ${m}`}\n                                />\n                            ))}\n                        </div>\n                    </Form>\n                    </div>\n\n                    <div className='p-2 gender-filter price-filter'>\n                    <h4 className='py-1'>Price</h4>\n                    <Form onChange={this.handleChange}>\n                        <div key={`default-checkbox`} className=\"mb-3\">\n                                <Form.Check\n                                custom\n                                type='checkbox'\n                                name='price'\n                                id={'first'}\n                                label={`  Rs. 0 to Rs. ${this.state.max / 3 }`}\n                                />\n\n                                <Form.Check\n                                custom\n                                type='checkbox'\n                                name='price'\n                                id={'second'}\n                                label={`  Rs. ${this.state.max} to Rs.${this.state.max / 3 * 2}`}\n                                />\n\n                                <Form.Check\n                                custom\n                                type='checkbox'\n                                name='price'\n                                id={'third'}\n                                label={`  Rs.${this.state.max /3 *2} to Rs. ${this.state.max}`}\n                                />\n                        </div>\n                    </Form>\n                    </div>\n                </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    const {data} = state;\n    return {data};\n}\n\nexport default connect(mapStateToProps,{filterProduct})(Filter)"]},"metadata":{},"sourceType":"module"}